# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.

  # 设置私有网络，让虚拟机在 192.168.33.x 网段中获得一个固定 IP
  config.vm.network "private_network", ip: "192.168.33.11"

  # 端口映射
  config.vm.network "forwarded_port", guest: 8080, host: 8080   # nginx

  # config.vm.network "forwarded_port", guest: 64101, host: 64101   # yt1-gateway
  # config.vm.network "forwarded_port", guest: 64102, host: 64102   # yt1-service

  config.vm.network "forwarded_port", guest: 8848, host: 8848 # nacos

  config.vm.network "forwarded_port", guest: 3000, host: 3000 # redmine
  config.vm.network "forwarded_port", guest: 9000, host: 9000
  config.vm.network "forwarded_port", guest: 9001, host: 9001

  config.vm.network "forwarded_port", guest: 5672, host: 5672 # AMQP 端口
  config.vm.network "forwarded_port", guest: 15672, host: 15672 # MQ管理界面端口

  config.vm.network "forwarded_port", guest: 6379, host: 6379 # redis

  # 添加一个共享文件夹配置，将 Windows 的本地路径映射到虚拟机内的路径
  config.vm.synced_folder ".", "/vagrant", disabled: true # 关闭默认
  config.vm.synced_folder "D:/local/workspace/yt1/nginx", "/vagrant/nginx"
  config.vm.synced_folder "D:/local/workspace/yt1/app", "/vagrant/yt1/app"
  config.vm.synced_folder "D:/local/workspace/yt1/download", "/vagrant/yt1/download"
  
  config.vm.boot_timeout = 1200 # 设置为600秒

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessible to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
